---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: openstackports.openstack.k-orc.cloud
spec:
  group: openstack.k-orc.cloud
  names:
    kind: OpenStackPort
    listKind: OpenStackPortList
    plural: openstackports
    singular: openstackport
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Error")].status
      name: Error
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OpenStackPort is the Schema for the openstackports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OpenStackPortSpec defines the desired state of OpenStackPort
            properties:
              cloud:
                description: Cloud is the OpenStackCloud hosting this resource
                type: string
              id:
                description: ID is the UUID of the existing OpenStack resource to
                  be adopted. If left empty, the controller will create a new resource
                  using the information in the "resource" stanza.
                type: string
              resource:
                properties:
                  adminStateUp:
                    description: The administrative state of the resource, which is
                      up (true) or down (false). Default is true.
                    type: boolean
                  allowedAddressPairs:
                    description: A set of zero or more allowed address pair objects
                      each where address pair object contains an ip_address and mac_address.
                      While the ip_address is required, the mac_address will be taken
                      from the port if not specified. The value of ip_address can
                      be an IP Address or a CIDR (if supported by the underlying extension
                      plugin). A server connected to the port can send a packet with
                      source address which matches one of the specified allowed address
                      pairs.
                    items:
                      properties:
                        ipAddress:
                          type: string
                        macAddress:
                          type: string
                      required:
                      - ipAddress
                      type: object
                    type: array
                  description:
                    description: A human-readable description for the resource. Default
                      is an empty string.
                    type: string
                  deviceOwner:
                    description: The entity type that uses this port. For example,
                      compute:nova (server instance), network:dhcp (DHCP agent) or
                      network:router_interface (router interface).
                    type: string
                  fixedIPs:
                    description: The IP addresses for the port. If you would like
                      to assign multiple IP addresses for the port, specify multiple
                      entries in this field. Each entry consists of IP address (ip_address)
                      and the subnet ID from which the IP address is assigned (subnet_id).
                      If you specify both a subnet ID and an IP address, OpenStack
                      Networking tries to allocate the IP address on that subnet to
                      the port. If you specify only a subnet ID, OpenStack Networking
                      allocates an available IP from that subnet to the port. If you
                      specify only an IP address, OpenStack Networking tries to allocate
                      the IP address if the address is a valid IP for any of the subnets
                      on the specified network.
                    items:
                      description: FixedIP is a data structure used in multiple resources
                        to identify an IP address on a subnet.
                      properties:
                        ipAddress:
                          type: string
                        subnet:
                          type: string
                      type: object
                    type: array
                  macAddress:
                    description: The MAC address of the port. If unspecified, a MAC
                      address is automatically generated.
                    type: string
                  name:
                    description: Human-readable name of the resource. Default is an
                      empty string.
                    type: string
                  network:
                    description: The name of the attached OpenStackNetwork
                    type: string
                  projectID:
                    description: The ID of the project that owns the resource. Only
                      administrative and users with advsvc role can specify a project
                      ID other than their own. You cannot change this value through
                      authorization policies.
                    type: string
                  propagateUplinkStatus:
                    description: The uplink status propagation of the port. Valid
                      values are enabled (true) and disabled (false).
                    type: boolean
                  securityGroups:
                    description: The OpenStackSecurityGroups applied to the port.
                    items:
                      type: string
                    type: array
                  tenantID:
                    description: The ID of the project that owns the resource. Only
                      administrative and users with advsvc role can specify a project
                      ID other than their own. You cannot change this value through
                      authorization policies.
                    type: string
                type: object
              unmanaged:
                description: Unmanaged, when true, means that no action will be performed
                  in OpenStack against this resource. This is false by default, except
                  for pre-existing resources that are adopted by passing ID on creation.
                type: boolean
            required:
            - cloud
            type: object
          status:
            description: OpenStackPortStatus defines the observed state of OpenStackPort
            properties:
              conditions:
                description: 'Represents the observations of an OpenStack resource''s
                  current state. All resources must define: "Ready", "WaitingFor",
                  "Error"'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              resource:
                properties:
                  adminStateUp:
                    description: Administrative state of port. If false (down), port
                      does not forward packets.
                    type: boolean
                  allowedAddressPairs:
                    description: Identifies the list of IP addresses the port will
                      recognize/accept
                    items:
                      properties:
                        ipAddress:
                          type: string
                        macAddress:
                          type: string
                      required:
                      - ipAddress
                      type: object
                    type: array
                  createdAt:
                    description: Timestamp when the port was created
                    type: string
                  description:
                    description: Describes the port.
                    type: string
                  deviceID:
                    description: Identifies the device (e.g., virtual server) using
                      this port.
                    type: string
                  deviceOwner:
                    description: 'Identifies the entity (e.g.: dhcp agent) using this
                      port.'
                    type: string
                  fixedIPs:
                    description: Specifies IP addresses for the port thus associating
                      the port itself with the subnets where the IP addresses are
                      picked from
                    items:
                      properties:
                        ipAddress:
                          type: string
                        subnetID:
                          type: string
                      type: object
                    type: array
                  id:
                    description: UUID for the port.
                    type: string
                  macAddress:
                    description: Mac address to use on this port.
                    type: string
                  name:
                    description: Human-readable name for the port. Might not be unique.
                    type: string
                  networkID:
                    description: Network that this port is associated with.
                    type: string
                  projectID:
                    description: ProjectID is the project owner of the port.
                    type: string
                  propagateUplinkStatus:
                    description: PropagateUplinkStatus enables/disables propagate
                      uplink status on the port.
                    type: boolean
                  revisionNumber:
                    description: RevisionNumber optionally set via extensions/standard-attr-revisions
                    type: integer
                  securityGroups:
                    description: Specifies the IDs of any security groups associated
                      with a port.
                    items:
                      type: string
                    type: array
                  status:
                    description: Indicates whether network is currently operational.
                      Possible values include `ACTIVE', `DOWN', `BUILD', or `ERROR'.
                      Plug-ins might define additional values.
                    type: string
                  tags:
                    description: Tags optionally set via extensions/attributestags
                    items:
                      type: string
                    type: array
                  tenantID:
                    description: TenantID is the project owner of the port.
                    type: string
                  updatedAt:
                    description: Timestamp when the port was last updated
                    type: string
                  valueSpecs:
                    additionalProperties:
                      type: string
                    description: Extra parameters to include in the request.
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
