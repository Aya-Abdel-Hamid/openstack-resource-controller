---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: openstackimages.openstack.k-orc.cloud
spec:
  group: openstack.k-orc.cloud
  names:
    kind: OpenStackImage
    listKind: OpenStackImageList
    plural: openstackimages
    singular: openstackimage
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Error")].status
      name: Error
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    - jsonPath: .status.resource.id
      name: OpenStackID
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OpenStackImage is the Schema for the openstackimages API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OpenStackImageSpec defines the desired state of OpenStackImage
            properties:
              cloud:
                description: Cloud is the OpenStackCloud hosting this resource
                type: string
              id:
                description: ID is the UUID of the existing OpenStack resource to
                  be adopted. If left empty, the controller will create a new resource
                  using the information in the "resource" stanza.
                type: string
              resource:
                description: OpenStackImageSpec defines the desired state of OpenStackImage
                properties:
                  checksum:
                    type: string
                  containerFormat:
                    description: ContainerFormat is the format of the container. Valid
                      values are ami, ari, aki, bare, and ovf.
                    type: string
                  diskFormat:
                    description: DiskFormat is the format of the disk. If set, valid
                      values are ami, ari, aki, vhd, vmdk, raw, qcow2, vdi, and iso.
                    type: string
                  id:
                    description: ID is the OpenStack UUID of the resource. If left
                      empty, the controller will create a new resource and populate
                      this field. If manually populated, the controller will adopt
                      the corresponding resource.
                    type: string
                  method:
                    description: Method is the Glance Interoperable Import method
                      to use. The only supported method is currently "web-download".
                    enum:
                    - ""
                    - web-download
                    type: string
                  minDisk:
                    description: MinDisk is the amount of disk space in GB that is
                      required to boot the image.
                    type: integer
                  minRam:
                    description: MinRAM is the amount of RAM in MB that is required
                      to boot the image.
                    type: integer
                  name:
                    description: Name of the OpenStack resource.
                    type: string
                  protected:
                    description: protected is whether the image is not deletable.
                    type: boolean
                  tags:
                    description: Tags is a set of image tags. Each tag is a string
                      of at most 255 chars.
                    items:
                      type: string
                    type: array
                  visibility:
                    description: Visibility defines who can see/use the image.
                    enum:
                    - public
                    - private
                    - shared
                    - community
                    type: string
                  webDownload:
                    description: WebDownload can be populated if Method is "web-download".
                    properties:
                      url:
                        type: string
                    type: object
                type: object
              unmanaged:
                description: Unmanaged, when true, means that no action will be performed
                  in OpenStack against this resource.
                type: boolean
            required:
            - cloud
            type: object
          status:
            description: OpenStackImageStatus defines the observed state of OpenStackImage
            properties:
              conditions:
                description: 'Represents the observations of an OpenStack resource''s
                  current state. All resources must define: "Ready", "WaitingFor",
                  "Error"'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              resource:
                description: OpenStackImageStatus defines the observed state of OpenStackImage
                properties:
                  checksum:
                    description: Checksum is the checksum of the data that's associated
                      with the image.
                    type: string
                  containerFormat:
                    description: ContainerFormat is the format of the container. Valid
                      values are ami, ari, aki, bare, and ovf.
                    type: string
                  createdAt:
                    description: CreatedAt contains the timestamp of when the resource
                      was created.
                    type: string
                  diskFormat:
                    description: DiskFormat is the format of the disk. If set, valid
                      values are ami, ari, aki, vhd, vmdk, raw, qcow2, vdi, and iso.
                    type: string
                  file:
                    description: File is the trailing path after the glance endpoint
                      that represent the location of the image or the path to retrieve
                      it.
                    type: string
                  hidden:
                    description: Hidden is whether the image is listed in default
                      image list or not.
                    type: boolean
                  id:
                    description: ID is the image UUID.
                    type: string
                  importMethods:
                    description: OpenStackImageImportMethods is a slice listing the
                      types of import methods available in the cloud.
                    items:
                      type: string
                    type: array
                  metadata:
                    additionalProperties:
                      type: string
                    description: Metadata is a set of metadata associated with the
                      image. Image metadata allow for meaningfully define the image
                      properties and tags. See http://docs.openstack.org/developer/glance/metadefs-concepts.html.
                    type: object
                  minDisk:
                    description: MinDisk is the amount of disk space in GB that is
                      required to boot the image.
                    type: integer
                  minRam:
                    description: MinRAM is the amount of RAM in MB that is required
                      to boot the image.
                    type: integer
                  name:
                    description: Name is the human-readable display name for the image.
                    type: string
                  owner:
                    description: Owner is the tenant ID the image belongs to.
                    type: string
                  properties:
                    additionalProperties:
                      type: string
                    description: Properties is a set of key-value pairs, if any, that
                      are associated with the image.
                    type: object
                  protected:
                    description: Protected is whether the image is deletable or not.
                    type: boolean
                  schema:
                    description: Schema is the path to the JSON-schema that represent
                      the image or image entity.
                    type: string
                  size:
                    description: Size is the size in bytes of the data that's associated
                      with the image.
                    format: int64
                    type: integer
                  status:
                    description: Status is the image status. It can be "queued" or
                      "active" See imageservice/v2/images/type.go
                    type: string
                  storeIDs:
                    description: StoreIDs is a slice listing the store IDs available
                      in the cloud.
                    items:
                      type: string
                    type: array
                  tags:
                    description: Tags is a list of image tags. Tags are arbitrarily
                      defined strings attached to an image.
                    items:
                      type: string
                    type: array
                  updatedAt:
                    description: UpdatedAt contains the timestamp of when the resource
                      was last changed.
                    type: string
                  virtualSize:
                    description: VirtualSize is the virtual size of the image
                    format: int64
                    type: integer
                  visibility:
                    description: Visibility defines who can see/use the image.
                    type: string
                required:
                - id
                - name
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
