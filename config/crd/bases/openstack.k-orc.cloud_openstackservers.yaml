---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: openstackservers.openstack.k-orc.cloud
spec:
  group: openstack.k-orc.cloud
  names:
    kind: OpenStackServer
    listKind: OpenStackServerList
    plural: openstackservers
    singular: openstackserver
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Error")].status
      name: Error
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Status
      type: string
    - jsonPath: .status.resource.id
      name: OpenStackID
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: OpenStackServer is the Schema for the openstackservers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OpenStackServerSpec defines the desired state of OpenStackPort
            properties:
              cloud:
                description: Cloud is the OpenStackCloud hosting this resource
                type: string
              id:
                description: ID is the UUID of the existing OpenStack resource to
                  be adopted. If left empty, the controller will create a new resource
                  using the information in the "resource" stanza.
                type: string
              resource:
                description: OpenStackServerResourceSpec defines the desired state
                  of OpenStackServer
                properties:
                  flavor:
                    description: Flavor indicates the OpenStackFlavor of the deployed
                      server.
                    type: string
                  image:
                    description: Image indicates the OpenStackImage used to deploy
                      the server.
                    type: string
                  key:
                    description: Key indicates an OpenStackKey to injected into the
                      server on launch.
                    type: string
                  metadata:
                    additionalProperties:
                      type: string
                    description: Metadata includes a list of all user-specified key-value
                      pairs attached to the server.
                    type: object
                  name:
                    description: Name contains the human-readable name for the server.
                    type: string
                  networks:
                    description: Networks indicates the OpenStackNetworks to attach
                      the server to.
                    items:
                      properties:
                        fixedIP:
                          type: string
                        network:
                          type: string
                        port:
                          type: string
                        tag:
                          type: string
                      type: object
                    type: array
                  securityGroups:
                    description: SecurityGroups sets the security groups to apply
                      to this instance.
                    items:
                      type: string
                    type: array
                  tags:
                    description: Tags is a slice/list of string tags in a server.
                      The requires microversion 2.26 or later.
                    items:
                      type: string
                    type: array
                  userData:
                    description: UserData contains configuration information or scripts
                      to use upon launch. Create will base64-encode it for you, if
                      it isn't already.
                    format: byte
                    type: string
                required:
                - networks
                type: object
              unmanaged:
                description: Unmanaged, when true, means that no action will be performed
                  in OpenStack against this resource.
                type: boolean
            required:
            - cloud
            type: object
          status:
            description: OpenStackServerStatus defines the observed state of OpenStackPort
            properties:
              conditions:
                description: 'Represents the observations of an OpenStack resource''s
                  current state. All resources must define: "Ready", "WaitingFor",
                  "Error"'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              resource:
                description: OpenStackServerResourceStatus defines the observed state
                  of OpenStackServer
                properties:
                  accessIPv4:
                    description: AccessIPv4 contains the IPv4 addresses of the server,
                      suitable for remote access for administration.
                    type: string
                  accessIPv6:
                    description: AccessIPv6 contains the IPv6 addresses of the server,
                      suitable for remote access for administration.
                    type: string
                  addresses:
                    description: Addresses includes a list of all IP addresses assigned
                      to the server, keyed by pool.
                    type: string
                  createdAt:
                    description: CreatedAt contains the timestamp of when the resource
                      was created.
                    type: string
                  fault:
                    description: Fault contains failure information about a server.
                    type: string
                  flavorID:
                    description: FlavorID indicates the hardware configuration of
                      the deployed server.
                    type: string
                  hostID:
                    description: HostID is the host where the server is located in
                      the cloud.
                    type: string
                  id:
                    description: ID uniquely identifies this server amongst all other
                      servers, including those not accessible to the current tenant.
                    type: string
                  imageID:
                    description: ImageID indicates the OS image used to deploy the
                      server.
                    type: string
                  keyName:
                    description: KeyName indicates which public key was injected into
                      the server on launch.
                    type: string
                  links:
                    description: Links includes HTTP references to the itself, useful
                      for passing along to other APIs that might want a server reference.
                    items:
                      type: string
                    type: array
                  metadata:
                    description: Metadata includes all user-specified key-value pairs
                      attached to the server.
                    type: string
                  name:
                    description: Name contains the human-readable name for the server.
                    type: string
                  progress:
                    description: Progress ranges from 0..100. A request made against
                      the server completes only once Progress reaches 100.
                    type: integer
                  securityGroupIDs:
                    description: SecurityGroupIDs includes the security groups that
                      this instance has applied to it.
                    type: string
                  serverGroupIDs:
                    description: ServerGroupIDs is a slice of strings containing the
                      UUIDs of the server groups to which the server belongs. Currently
                      this can contain at most one entry. New in microversion 2.71
                    items:
                      type: string
                    type: array
                  status:
                    description: Status contains the current operational status of
                      the server, such as IN_PROGRESS or ACTIVE.
                    type: string
                  tags:
                    description: Tags is a slice/list of string tags in a server.
                      The requires microversion 2.26 or later.
                    items:
                      type: string
                    type: array
                  tenantID:
                    description: TenantID identifies the tenant owning this server
                      resource.
                    type: string
                  updatedAt:
                    description: UpdatedAt contains the timestamp of when the resource
                      was last changed.
                    type: string
                  userID:
                    description: UserID uniquely identifies the user account owning
                      the tenant.
                    type: string
                  volumesAttached:
                    description: AttachedVolumes includes the volume attachments of
                      this instance
                    items:
                      type: string
                    type: array
                required:
                - id
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
